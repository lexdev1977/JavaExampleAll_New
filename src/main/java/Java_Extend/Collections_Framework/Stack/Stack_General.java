package Java_Extend.Collections_Framework.Stack;

public class Stack_General {
    /*

                                            ***Stack (Стек)***

     Структура данных, принцип работы которой называется LIFO -
     "last in — first out" (“последним пришел — первым вышел”).

     основные методы:

        empty()	        Проверяет, пуст ли стек
        push()	        Ставит элемент в верх стека
        pop()	        возвращает объект стека, удаляя его
        peek()	        возвращает объект стека, не удаляя его
        search()    	Поиск элемента для получения его индекса


    Стек — это известная структура данных.

    Она очень проста и довольно много предметов из нашей повседневной жизни “реализованы” как стек.

    Представь себе простую ситуацию: ты живешь в гостинице, и в течение дня тебе поступали деловые письма. Поскольку тебя в это время не было в номере, служащий гостиницы просто складывал приходящие письма на твой стол.

    Сначала он положил на стол первое письмо.
    Потом пришло второе, и он положил его поверх первого.
    Третье пришедшее письмо он положил поверх второго, а четвертое — поверх третьего.

    А теперь, ответь на простой вопрос: какое письмо ты прочтешь первым, когда придешь в номер и увидишь стопку на столе?

    Правильно, ты прочитаешь верхнее письмо. То есть то, которое пришло последним по времени.

    Именно так и работает стек.

    Для чего может пригодиться стек?

    Например, ты создаешь на Java какую-то карточную игру. Колода карт лежит на столе. Отыгранные карты отправляются в сброс.

    Ты можешь реализовать и колоду, и сброс используя два стека.

    Игроки берут себе карты с верха колоды — тот же принцип, что и с письмами.

    Когда игроки отправляют карты в сброс, новые карты ложатся поверх старых.

    Вот как будет выглядеть первый набросок нашей игры, реализованный на основе стека:

    */

/** public class Card {

   public Card(String name) {
       this.name = name;
   }

   private String name;

   public String getName() {
       return name;
   }

   public void setName(String name) {
       this.name = name;
   }

   @Override
   public String toString() {
       return "Card{" +
               "name='" + name + '\'' +
               '}';
   }
}

import java.util.Stack;

public class SimpleCardGame {

   //  колода
   private Stack<Card> deck;

   //  сброс
   private Stack<Card> graveyard;

   public Card getCardFromDeck() {
       return deck.pop();
   }

   public void discard(Card card) {
       graveyard.push(card);
   }

   public Card lookTopCard() {

       return deck.peek();
   }

   //  ..геттеры, сеттеры и т.д.
}

     */

}
